THREE.MTLLoader=function(a){this.manager=a===void 0?THREE.DefaultLoadingManager:a},THREE.MTLLoader.prototype={constructor:THREE.MTLLoader,load:function(a,b,c,d){var e=this,f=new THREE.FileLoader(this.manager);f.setPath(this.path),f.load(a,function(g){b(e.parse(g))},c,d)},setPath:function(a){this.path=a},setTexturePath:function(a){this.texturePath=a},setBaseUrl:function(a){console.warn('THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.'),this.setTexturePath(a)},setCrossOrigin:function(a){this.crossOrigin=a},setMaterialOptions:function(a){this.materialOptions=a},parse:function(a){for(var g,b=a.split('\n'),c={},d=/\s+/,e={},f=0;f<b.length;f++)if(g=b[f],g=g.trim(),0!==g.length&&'#'!==g.charAt(0)){var h=g.indexOf(' '),j=0<=h?g.substring(0,h):g;j=j.toLowerCase();var k=0<=h?g.substring(h+1):'';if(k=k.trim(),'newmtl'===j)c={name:k},e[k]=c;else if(c)if('ka'===j||'kd'===j||'ks'===j){var l=k.split(d,3);c[j]=[parseFloat(l[0]),parseFloat(l[1]),parseFloat(l[2])]}else c[j]=k}var m=new THREE.MTLLoader.MaterialCreator(this.texturePath||this.path,this.materialOptions);return m.setCrossOrigin(this.crossOrigin),m.setManager(this.manager),m.setMaterials(e),m}},THREE.MTLLoader.MaterialCreator=function(a,b){this.baseUrl=a||'',this.options=b,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide,this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping},THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,crossOrigin:'Anonymous',setCrossOrigin:function(a){this.crossOrigin=a},setManager:function(a){this.manager=a},setMaterials:function(a){this.materialsInfo=this.convert(a),this.materials={},this.materialsArray=[],this.nameLookup={}},convert:function(a){if(!this.options)return a;var b={};for(var c in a){var d=a[c],e={};for(var f in b[c]=e,d){var g=!0,h=d[f],j=f.toLowerCase();switch(j){case'kd':case'ka':case'ks':this.options&&this.options.normalizeRGB&&(h=[h[0]/255,h[1]/255,h[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===h[0]&&0===h[1]&&0===h[2]&&(g=!1);break;default:}g&&(e[j]=h)}}return b},preload:function(){for(var a in this.materialsInfo)this.create(a)},getIndex:function(a){return this.nameLookup[a]},getAsArray:function(){var a=0;for(var b in this.materialsInfo)this.materialsArray[a]=this.create(b),this.nameLookup[b]=a,a++;return this.materialsArray},create:function(a){return void 0===this.materials[a]&&this.createMaterial_(a),this.materials[a]},createMaterial_:function(a){function b(k,l){return'string'!=typeof l||''===l?'':/^https?:\/\//i.test(l)?l:k+l}function c(k,l){if(!f[k]){var m=d.getTextureParams(l,f),o=d.loadTexture(b(d.baseUrl,m.url));o.repeat.copy(m.scale),o.offset.copy(m.offset),o.wrapS=d.wrap,o.wrapT=d.wrap,f[k]=o}}var d=this,e=this.materialsInfo[a],f={name:a,side:this.side};for(var g in e){var j,h=e[g];if(''!==h)switch(g.toLowerCase()){case'kd':f.color=new THREE.Color().fromArray(h);break;case'ks':f.specular=new THREE.Color().fromArray(h);break;case'map_kd':c('map',h);break;case'map_ks':c('specularMap',h);break;case'norm':c('normalMap',h);break;case'map_bump':case'bump':c('bumpMap',h);break;case'ns':f.shininess=parseFloat(h);break;case'd':j=parseFloat(h),1>j&&(f.opacity=j,f.transparent=!0);break;case'tr':j=parseFloat(h),0<j&&(f.opacity=1-j,f.transparent=!0);break;default:}}return this.materials[a]=new THREE.MeshPhongMaterial(f),this.materials[a]},getTextureParams:function(a,b){var e,c={scale:new THREE.Vector2(1,1),offset:new THREE.Vector2(0,0)},d=a.split(/\s+/);return e=d.indexOf('-bm'),0<=e&&(b.bumpScale=parseFloat(d[e+1]),d.splice(e,2)),e=d.indexOf('-s'),0<=e&&(c.scale.set(parseFloat(d[e+1]),parseFloat(d[e+2])),d.splice(e,4)),e=d.indexOf('-o'),0<=e&&(c.offset.set(parseFloat(d[e+1]),parseFloat(d[e+2])),d.splice(e,4)),c.url=d.join(' ').trim(),c},loadTexture:function(a,b,c,d,e){var f,g=THREE.Loader.Handlers.get(a),h=void 0===this.manager?THREE.DefaultLoadingManager:this.manager;return null===g&&(g=new THREE.TextureLoader(h)),g.setCrossOrigin&&g.setCrossOrigin(this.crossOrigin),f=g.load(a,c,d,e),void 0!==b&&(f.mapping=b),f}};