THREE.OBJLoader=function(){function r(){var f={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(b,e){if(this.object&&!1===this.object.fromDeclaration)this.object.name=b,this.object.fromDeclaration=!1!==e;else{var c=this.object&&"function"===typeof this.object.currentMaterial?this.object.currentMaterial():void 0;this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0);this.object={name:b||"",fromDeclaration:!1!==e,geometry:{vertices:[],
    normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(c,b){var a=this._finalize(!1);a&&(a.inherited||0>=a.groupCount)&&this.materials.splice(a.index,1);a={index:this.materials.length,name:c||"",mtllib:Array.isArray(b)&&0<b.length?b[b.length-1]:"",smooth:void 0!==a?a.smooth:this.smooth,groupStart:void 0!==a?a.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(a){a={index:"number"===typeof a?a:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,
    groupEnd:-1,groupCount:-1,inherited:!1};a.clone=this.clone.bind(a);return a}};this.materials.push(a);return a},currentMaterial:function(){if(0<this.materials.length)return this.materials[this.materials.length-1]},_finalize:function(c){var b=this.currentMaterial();b&&-1===b.groupEnd&&(b.groupEnd=this.geometry.vertices.length/3,b.groupCount=b.groupEnd-b.groupStart,b.inherited=!1);if(c&&1<this.materials.length)for(var a=this.materials.length-1;0<=a;a--)0>=this.materials[a].groupCount&&this.materials.splice(a,
    1);c&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth});return b}};c&&c.name&&"function"===typeof c.clone&&(c=c.clone(0),c.inherited=!0,this.object.materials.push(c));this.objects.push(this.object)}},finalize:function(){this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(b,e){var c=parseInt(b,10);return 3*(0<=c?c-1:c+e/3)},parseNormalIndex:function(b,e){var c=parseInt(b,10);return 3*(0<=c?c-1:c+e/3)},parseUVIndex:function(b,
    e){var c=parseInt(b,10);return 2*(0<=c?c-1:c+e/2)},addVertex:function(b,e,c){var d=this.vertices,h=this.object.geometry.vertices;h.push(d[b+0],d[b+1],d[b+2]);h.push(d[e+0],d[e+1],d[e+2]);h.push(d[c+0],d[c+1],d[c+2])},addVertexLine:function(b){var e=this.vertices;this.object.geometry.vertices.push(e[b+0],e[b+1],e[b+2])},addNormal:function(b,e,c){var d=this.normals,h=this.object.geometry.normals;h.push(d[b+0],d[b+1],d[b+2]);h.push(d[e+0],d[e+1],d[e+2]);h.push(d[c+0],d[c+1],d[c+2])},addColor:function(b,
    e,c){var d=this.colors,h=this.object.geometry.colors;h.push(d[b+0],d[b+1],d[b+2]);h.push(d[e+0],d[e+1],d[e+2]);h.push(d[c+0],d[c+1],d[c+2])},addUV:function(b,e,c){var d=this.uvs,h=this.object.geometry.uvs;h.push(d[b+0],d[b+1]);h.push(d[e+0],d[e+1]);h.push(d[c+0],d[c+1])},addUVLine:function(b){var e=this.uvs;this.object.geometry.uvs.push(e[b+0],e[b+1])},addFace:function(b,e,c,d,h,a,g,f,m){var k=this.vertices.length;b=this.parseVertexIndex(b,k);e=this.parseVertexIndex(e,k);c=this.parseVertexIndex(c,
    k);this.addVertex(b,e,c);void 0!==d&&(c=this.uvs.length,b=this.parseUVIndex(d,c),e=this.parseUVIndex(h,c),c=this.parseUVIndex(a,c),this.addUV(b,e,c));void 0!==g&&(d=this.normals.length,b=this.parseNormalIndex(g,d),e=g===f?b:this.parseNormalIndex(f,d),c=g===m?b:this.parseNormalIndex(m,d),this.addNormal(b,e,c));0<this.colors.length&&this.addColor(b,e,c)},addLineGeometry:function(b,e){this.object.geometry.type="Line";for(var c=this.vertices.length,d=this.uvs.length,f=0,a=b.length;f<a;f++)this.addVertexLine(this.parseVertexIndex(b[f],
    c));c=0;for(a=e.length;c<a;c++)this.addUVLine(this.parseUVIndex(e[c],d))}};f.startObject("",!1);return f}function n(f){this.manager=void 0!==f?f:THREE.DefaultLoadingManager;this.materials=null}var t=/^[og]\s*(.+)?/,u=/^mtllib /,v=/^usemtl /;n.prototype={constructor:n,load:function(f,b,e,c){var d=this,h=new THREE.FileLoader(d.manager);h.setPath(this.path);h.load(f,function(a){b(d.parse(a))},e,c)},setPath:function(f){this.path=f},setMaterials:function(f){this.materials=f;return this},parse:function(f){console.time("OBJLoader");
    var b=new r;-1!==f.indexOf("\r\n")&&(f=f.replace(/\r\n/g,"\n"));-1!==f.indexOf("\\\n")&&(f=f.replace(/\\\n/g,""));var e=f.split("\n"),c,d="function"===typeof"".trimLeft;f=0;for(var h=e.length;f<h;f++){var a=e[f];a=d?a.trimLeft():a.trim();var g=a.length;if(0!==g&&(g=a.charAt(0),"#"!==g))if("v"===g)switch(a=a.split(/\s+/),a[0]){case "v":b.vertices.push(parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));8===a.length&&b.colors.push(parseFloat(a[4]),parseFloat(a[5]),parseFloat(a[6]));break;case "vn":b.normals.push(parseFloat(a[1]),
    parseFloat(a[2]),parseFloat(a[3]));break;case "vt":b.uvs.push(parseFloat(a[1]),parseFloat(a[2]))}else if("f"===g){var l=a.substr(1).trim().split(/\s+/);a=[];g=0;for(c=l.length;g<c;g++){var m=l[g];0<m.length&&(m=m.split("/"),a.push(m))}l=a[0];g=1;for(c=a.length-1;g<c;g++){m=a[g];var k=a[g+1];b.addFace(l[0],m[0],k[0],l[1],m[1],k[1],l[2],m[2],k[2])}}else if("l"===g){g=a.substring(1).trim().split(" ");c=[];l=[];if(-1===a.indexOf("/"))c=g;else for(a=0,m=g.length;a<m;a++)k=g[a].split("/"),""!==k[0]&&c.push(k[0]),
    ""!==k[1]&&l.push(k[1]);b.addLineGeometry(c,l)}else if(null!==(c=t.exec(a)))a=(" "+c[0].substr(1).trim()).substr(1),b.startObject(a);else if(v.test(a))b.object.startMaterial(a.substring(7).trim(),b.materialLibraries);else if(u.test(a))b.materialLibraries.push(a.substring(7).trim());else if("s"===g){if(c=a.split(" "),1<c.length?(a=c[1].trim().toLowerCase(),b.object.smooth="0"!==a&&"off"!==a):b.object.smooth=!0,a=b.object.currentMaterial())a.smooth=b.object.smooth}else if("\x00"!==a)throw Error('THREE.OBJLoader: Unexpected line: "'+
    a+'"');}b.finalize();e=new THREE.Group;e.materialLibraries=[].concat(b.materialLibraries);f=0;for(h=b.objects.length;f<h;f++)if(d=b.objects[f],a=d.geometry,g=d.materials,c="Line"===a.type,0!==a.vertices.length){l=new THREE.BufferGeometry;l.addAttribute("position",new THREE.Float32BufferAttribute(a.vertices,3));0<a.normals.length?l.addAttribute("normal",new THREE.Float32BufferAttribute(a.normals,3)):l.computeVertexNormals();0<a.colors.length&&l.addAttribute("color",new THREE.Float32BufferAttribute(a.colors,
    3));0<a.uvs.length&&l.addAttribute("uv",new THREE.Float32BufferAttribute(a.uvs,2));m=[];k=0;for(var n=g.length;k<n;k++){var p=g[k];a=void 0;if(null!==this.materials&&(a=this.materials.create(p.name),c&&a&&!(a instanceof THREE.LineBasicMaterial))){var q=new THREE.LineBasicMaterial;q.copy(a);a=q}a||(a=c?new THREE.LineBasicMaterial:new THREE.MeshPhongMaterial,a.name=p.name);a.flatShading=p.smooth?!1:!0;m.push(a)}if(1<m.length){k=0;for(n=g.length;k<n;k++)p=g[k],l.addGroup(p.groupStart,p.groupCount,k);
    a=c?new THREE.LineSegments(l,m):new THREE.Mesh(l,m)}else a=c?new THREE.LineSegments(l,m[0]):new THREE.Mesh(l,m[0]);a.name=d.name;e.add(a)}console.timeEnd("OBJLoader");return e}};return n}();